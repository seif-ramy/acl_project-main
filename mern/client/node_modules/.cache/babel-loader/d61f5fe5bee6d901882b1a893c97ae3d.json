{"ast":null,"code":"var _jsxFileName = \"/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/usersearch.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport CountryTable from './CountryTable';\nimport { SearchBar2 } from \"./SearchBar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class usersearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchEvents = (title, name) => {\n      this.setState({\n        [name]: title\n      });\n    };\n\n    this.data = []; // this data should not live in state\n\n    this.state = {\n      records: [],\n      id: '',\n      flight_from: '',\n      flight_to: '',\n      flight_date: '',\n      cabin: '',\n      noSeats: '',\n      isLoading: true\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5001/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n      let array = []; // const ObjectId = require(\"mongodb\").ObjectId;\n\n      for (let i = 0; i < response.data.length; i++) {\n        let entry = {}; //key value pairs\n        // entry.id= ObjectId( response.data[i].params.id )\n\n        entry.flight_from = response.data[i].flight_from;\n        entry.flight_to = response.data[i].flight_to;\n        entry.flightNum = response.data[i].flightNum;\n        entry.flight_date = response.data[i].flight_date;\n        entry.cabin = response.data[i].cabin;\n        entry.noSeats = response.data[i].noSeats;\n        entry.depTime = response.data[i].depTime;\n        entry.arrTime = response.data[i].arrTime;\n        entry.terminal = response.data[i].terminal;\n        array[i] = entry;\n      }\n\n      this.data = array;\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    // console.log(this.data); // data is array of objects\n    const filteredData = this.data.filter(dataObj => dataObj.flight_from.indexOf(this.state.flight_from) !== -1 && dataObj.flight_to.indexOf(this.state.flight_to) !== -1 && dataObj.flight_date.indexOf(this.state.flight_date) !== -1 && dataObj.cabin.indexOf(this.state.cabin) !== -1 && dataObj.noSeats.indexOf(this.state.noSeats) !== -1);\n    const filteredData2 = this.data.filter(dataObj => dataObj.flight_to.indexOf(this.state.flight_from) !== -1 && dataObj.flight_from.indexOf(this.state.flight_to) !== -1); // console.log(filteredData2);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar2, {\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        handleSearchEvents: this.handleSearchEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Departure Flights \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountryTable, {\n        id: this.state.id,\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flightNum: this.state.flightNum,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        depTime: this.state.depTime,\n        arrTime: this.state.arrTime,\n        terminal: this.state.terminal,\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Return Flights \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountryTable, {\n        id: this.state.id,\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flightNum: this.state.flightNum,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        depTime: this.state.depTime,\n        arrTime: this.state.arrTime,\n        terminal: this.state.terminal,\n        data: filteredData2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/usersearch.js"],"names":["React","Component","axios","CountryTable","SearchBar2","usersearch","constructor","props","handleSearchEvents","title","name","setState","data","state","records","id","flight_from","flight_to","flight_date","cabin","noSeats","isLoading","componentDidMount","get","then","response","array","i","length","entry","flightNum","depTime","arrTime","terminal","catch","error","render","filteredData","filter","dataObj","indexOf","filteredData2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport CountryTable from './CountryTable';\nimport { SearchBar2 } from \"./SearchBar2\";\n\nexport default class usersearch extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.data = []; // this data should not live in state\n        this.state = { \n        records: [],\n        id:'',\n        flight_from: '',\n        flight_to: '',\n        flight_date: '',\n        cabin: '',\n        noSeats: '',\n        isLoading: true,\n        };\n      }\n\n      // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n        let array = [];\n        // const ObjectId = require(\"mongodb\").ObjectId;\n        for (let i = 0; i < response.data.length; i++) {\n          let entry = {};\n          //key value pairs\n          // entry.id= ObjectId( response.data[i].params.id )\n          entry.flight_from = response.data[i].flight_from;\n          entry.flight_to = response.data[i].flight_to;\n          entry.flightNum = response.data[i].flightNum;\n          entry.flight_date = response.data[i].flight_date;\n          entry.cabin = response.data[i].cabin;\n          entry.noSeats = response.data[i].noSeats;\n          entry.depTime = response.data[i].depTime;\n          entry.arrTime = response.data[i].arrTime;\n          entry.terminal = response.data[i].terminal;\n          array[i] = entry;\n        }\n         this.data= array;\n        this.setState({\n          isLoading: false,\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  \n  \n  \n  handleSearchEvents = (title, name) => {\n    this.setState({ [name]: title });\n}\n    \n    render() {\n    // console.log(this.data); // data is array of objects\n    \n    const filteredData = this.data.filter((dataObj)=> \n    (dataObj.flight_from.indexOf(this.state.flight_from) !== -1)&&\n    (dataObj.flight_to.indexOf(this.state.flight_to) !== -1)&&\n    (dataObj.flight_date.indexOf(this.state.flight_date) !== -1)&&\n    (dataObj.cabin.indexOf(this.state.cabin) !== -1)&&\n    (dataObj.noSeats.indexOf(this.state.noSeats) !== -1));\n  \n\n     const filteredData2 = this.data.filter((dataObj)=> \n     (dataObj.flight_to.indexOf(this.state.flight_from) !== -1)&&\n     (dataObj.flight_from.indexOf(this.state.flight_to) !== -1));\n    // console.log(filteredData2);\n\n    return (\n      <div className=\"App\">\n        <SearchBar2\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          handleSearchEvents={this.handleSearchEvents} />\n\n        <h3> Departure Flights </h3>\n\n        <CountryTable\n          id={this.state.id}\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flightNum={this.state.flightNum}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          depTime={this.state.depTime}\n          arrTime={this.state.arrTime}\n          terminal={this.state.terminal}\n          data={filteredData} /> {/* should pass filtered data into CountryTable*/}\n          \n        \n        <h3> Return Flights </h3>\n         \n\n        <CountryTable\n          id={this.state.id}\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flightNum={this.state.flightNum}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          depTime={this.state.depTime}\n          arrTime={this.state.arrTime}\n          terminal={this.state.terminal}\n          data={filteredData2} /> \n      </div>\n    );\n      \n      }\n}\n"]},"metadata":{},"sourceType":"module"}