{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetMoreOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass GetMoreOperation extends operation_1.AbstractOperation {\n  constructor(ns, cursorId, server, options = {}) {\n    super(options);\n    this.options = options;\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n\n\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n    }\n\n    server.getMore(this.ns, this.cursorId, this.options, callback);\n  }\n\n}\n\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.CURSOR_ITERATING]);","map":{"version":3,"sources":["../../src/operations/get_more.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAGA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAgBA;;;AACA,MAAa,gBAAb,SAAsC,WAAA,CAAA,iBAAtC,CAAuD;AAKrD,EAAA,WAAA,CAAY,EAAZ,EAAkC,QAAlC,EAAkD,MAAlD,EAAkE,OAAA,GAA0B,EAA5F,EAA8F;AAC5F,UAAM,OAAN;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,MAAL,GAAc,MAAd;AACD;AAED;;;AAGG;;;AACH,EAAA,OAAO,CAAC,MAAD,EAAiB,OAAjB,EAAyC,QAAzC,EAAqE;AAC1E,QAAI,MAAM,KAAK,KAAK,MAApB,EAA4B;AAC1B,aAAO,QAAQ,CACb,IAAI,OAAA,CAAA,iBAAJ,CAAsB,wDAAtB,CADa,CAAf;AAGD;;AACD,IAAA,MAAM,CAAC,OAAP,CAAe,KAAK,EAApB,EAAwB,KAAK,QAA7B,EAAuC,KAAK,OAA5C,EAAqD,QAArD;AACD;;AAxBoD;;AAAvD,OAAA,CAAA,gBAAA,GAAA,gBAAA;AA2BA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,gBAAd,EAAgC,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,EAAwB,WAAA,CAAA,MAAA,CAAO,gBAA/B,CAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMoreOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass GetMoreOperation extends operation_1.AbstractOperation {\n    constructor(ns, cursorId, server, options = {}) {\n        super(options);\n        this.options = options;\n        this.ns = ns;\n        this.cursorId = cursorId;\n        this.server = server;\n    }\n    /**\n     * Although there is a server already associated with the get more operation, the signature\n     * for execute passes a server so we will just use that one.\n     */\n    execute(server, session, callback) {\n        if (server !== this.server) {\n            return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n        }\n        server.getMore(this.ns, this.cursorId, this.options, callback);\n    }\n}\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.CURSOR_ITERATING]);\n//# sourceMappingURL=get_more.js.map"]},"metadata":{},"sourceType":"script"}