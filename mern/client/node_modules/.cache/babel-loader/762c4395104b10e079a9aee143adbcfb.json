{"ast":null,"code":"// import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\n// import axios from \"axios\"\n// import React, { useState } from 'react'\n// import './PaymentForm.css';\n// const CARD_OPTIONS = {\n// \ticonStyle: \"solid\",\n// \tstyle: {\n// \t\tbase: {\n// \t\t\ticonColor: \"#c4f0ff\",\n// \t\t\tcolor: \"#fff\",\n// \t\t\tfontWeight: 500,\n// \t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n// \t\t\tfontSize: \"16px\",\n// \t\t\tfontSmoothing: \"antialiased\",\n// \t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n// \t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n// \t\t},\n// \t\tinvalid: {\n// \t\t\ticonColor: \"#ffc7ee\",\n// \t\t\tcolor: \"#ffc7ee\"\n// \t\t}\n// \t}\n// }\n// export default function PaymentForm() {\n//     const [success, setSuccess ] = useState(false)\n//     const stripe = useStripe()\n//     const elements = useElements()\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n//         const {error, paymentMethod} = await stripe.createPaymentMethod({\n//             type: \"card\",\n//             card: elements.getElement(CardElement)\n//         })\n//     if(!error) {\n//         try {\n//             const {id} = paymentMethod\n//             console.log(\"Here\");\n//             axios.defaults.withCredentials = true;\n//             const response = await axios.post(\"http://localhost:3001/payment\", {\n//                 amount: 1000,\n//                 id\n//             })\n//             if(response.data.success) {\n//                 console.log(\"Successful payment\")\n//                 setSuccess(true)\n//             }\n//         } catch (error) {\n//             console.log(\"Error\", error)\n//         }\n//     } else {\n//         console.log(error.message)\n//     }\n// }\n//     return (\n//         <>\n//         {!success ? \n//         <form onSubmit={handleSubmit}>\n//             <fieldset className=\"FormGroup\">\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/></div>\n//                 {/* </div>\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/>\n//                 </div>\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/>\n//                 </div> */}\n//             </fieldset>\n//             <button>Pay</button>\n//         </form>\n//         :\n//        <div>\n//        </div> \n//         }\n//         </>\n//     )\n// }","map":{"version":3,"sources":["/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/part2/PaymentForm.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["// import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\n// import axios from \"axios\"\n// import React, { useState } from 'react'\n// import './PaymentForm.css';\n// const CARD_OPTIONS = {\n// \ticonStyle: \"solid\",\n// \tstyle: {\n// \t\tbase: {\n// \t\t\ticonColor: \"#c4f0ff\",\n// \t\t\tcolor: \"#fff\",\n// \t\t\tfontWeight: 500,\n// \t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n// \t\t\tfontSize: \"16px\",\n// \t\t\tfontSmoothing: \"antialiased\",\n// \t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n// \t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n// \t\t},\n// \t\tinvalid: {\n// \t\t\ticonColor: \"#ffc7ee\",\n// \t\t\tcolor: \"#ffc7ee\"\n// \t\t}\n// \t}\n// }\n\n// export default function PaymentForm() {\n//     const [success, setSuccess ] = useState(false)\n//     const stripe = useStripe()\n//     const elements = useElements()\n\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n//         const {error, paymentMethod} = await stripe.createPaymentMethod({\n//             type: \"card\",\n//             card: elements.getElement(CardElement)\n//         })\n    \n\n//     if(!error) {\n//         try {\n//             const {id} = paymentMethod\n//             console.log(\"Here\");\n//             axios.defaults.withCredentials = true;\n//             const response = await axios.post(\"http://localhost:3001/payment\", {\n//                 amount: 1000,\n//                 id\n//             })\n\n//             if(response.data.success) {\n//                 console.log(\"Successful payment\")\n//                 setSuccess(true)\n//             }\n\n//         } catch (error) {\n//             console.log(\"Error\", error)\n//         }\n//     } else {\n//         console.log(error.message)\n//     }\n// }\n\n//     return (\n//         <>\n//         {!success ? \n//         <form onSubmit={handleSubmit}>\n//             <fieldset className=\"FormGroup\">\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/></div>\n//                 {/* </div>\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/>\n//                 </div>\n//                 <div className=\"FormRow\">\n//                     <CardElement options={CARD_OPTIONS}/>\n//                 </div> */}\n//             </fieldset>\n//             <button>Pay</button>\n//         </form>\n//         :\n//        <div>\n           \n//        </div> \n//         }\n            \n//         </>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}