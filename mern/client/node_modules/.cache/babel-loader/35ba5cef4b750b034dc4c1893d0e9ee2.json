{"ast":null,"code":"var _jsxFileName = \"/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/part2/userProfile.js\";\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  const email = JSON.parse(localStorage.getItem(\"profile\")).user.email; //Require Model\n\n  const Users = require('/Users/seiframy/Downloads/acl_project-main/mern/server/schema/userSchema.js');\n\n  try {\n    mongoose.connect(process.env.ATLAS_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true\n    }, () => {\n      console.log('Connected to MongoDB');\n    }); // Find User if Exist\n    //   const user = await Users.findOne({email : email});\n\n    let db_connect = dbo.getDb();\n    let myquery = {\n      email: email\n    };\n    const user = db_connect.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) throw err;\n      res.json(result);\n    });\n    const username = user.username;\n    const email2 = user.email;\n    const password = user.password;\n  } catch (error) {\n    console.log(error);\n    res.status(400).send(\"error\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/part2/userProfile.js"],"names":["React","useState","NavLink","useHistory","UserProfile","email","JSON","parse","localStorage","getItem","user","Users","require","mongoose","connect","process","env","ATLAS_URI","useNewUrlParser","useUnifiedTopology","useCreateIndex","console","log","db_connect","dbo","getDb","myquery","collection","findOne","err","result","res","json","username","email2","password","error","status","send","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAGtB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CC,IAA5C,CAAiDL,KAA/D,CAHsB,CAKxB;;AACE,QAAMM,KAAK,GAAGC,OAAO,CAAC,6EAAD,CAArB;;AACA,MAAI;AACAC,IAAAA,QAAQ,CAACC,OAAT,CACEC,OAAO,CAACC,GAAR,CAAYC,SADd,EAEE;AAAEC,MAAAA,eAAe,EAAE,IAAnB;AAAyBC,MAAAA,kBAAkB,EAAE,IAA7C;AAAmDC,MAAAA,cAAc,EAAE;AAAnE,KAFF,EAGE,MAAM;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KALH,EADA,CASE;AACF;;AACE,QAAIC,UAAU,GAAGC,GAAG,CAACC,KAAJ,EAAjB;AACA,QAAIC,OAAO,GAAG;AAACrB,MAAAA,KAAK,EAAGA;AAAT,KAAd;AACH,UAAMK,IAAI,GAACa,UAAU,CACrBI,UADW,CACA,OADA,EAEXC,OAFW,CAEHF,OAFG,EAEM,UAAUG,GAAV,EAAeC,MAAf,EAAuB;AACvC,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,MAAAA,GAAG,CAACC,IAAJ,CAASF,MAAT;AACD,KALW,CAAX;AAMG,UAAMG,QAAQ,GAACvB,IAAI,CAACuB,QAApB;AACA,UAAMC,MAAM,GAACxB,IAAI,CAACL,KAAlB;AACA,UAAM8B,QAAQ,GAACzB,IAAI,CAACyB,QAApB;AACH,GAtBH,CAsBI,OAAOC,KAAP,EAAc;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACAL,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB;AACD;;AAEH,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA9C;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,+BACE;AAAA,kCACF;AAAA,sBAAK,KAAKN;AAAV;AAAA;AAAA;AAAA;AAAA,kBADE,eAEJ;AAAA,sBAAK,KAAK5B;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFI,eAGJ;AAAA,sBAAK,KAAK8B;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAxDD;;KAAM/B,W;AA0DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\n\n\nconst UserProfile = () => {\n    \n    \n    const email = JSON.parse(localStorage.getItem(\"profile\")).user.email;\n\n  //Require Model\n    const Users = require('/Users/seiframy/Downloads/acl_project-main/mern/server/schema/userSchema.js');\n    try {\n        mongoose.connect(\n          process.env.ATLAS_URI,\n          { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true },\n          () => {\n            console.log('Connected to MongoDB');\n          }\n        );\n        \n          // Find User if Exist\n        //   const user = await Users.findOne({email : email});\n          let db_connect = dbo.getDb();\n          let myquery = {email : email};\n       const user=db_connect\n      .collection(\"users\")\n      .findOne(myquery, function (err, result) {\n        if (err) throw err;\n        res.json(result);\n      });\n          const username=user.username;\n          const email2=user.email;\n          const password=user.password;\n      } catch (error) {\n        console.log(error)\n        res.status(400).send(\"error\");\n      }\n    \n    return (\n        <div>\n        <h3>Record List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Username</th>\n              <th>Email</th>\n              <th>Password</th>\n              \n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n          <td>{this.username}</td>\n        <td>{this.email}</td>\n        <td>{this.password}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}