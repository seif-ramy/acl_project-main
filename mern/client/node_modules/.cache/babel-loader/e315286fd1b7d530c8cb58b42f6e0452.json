{"ast":null,"code":"var _jsxFileName = \"/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/usersearch.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport CountryTable from './CountryTable';\nimport { SearchBar2 } from \"./SearchBar2\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class usersearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchEvents = (title, name) => {\n      this.setState({\n        [name]: title\n      });\n    };\n\n    this.data = []; // this data should not live in state\n\n    this.state = {\n      records: [],\n      flight_from: '',\n      flight_to: '',\n      flightNum: '',\n      flight_date: '',\n      cabin: '',\n      noSeats: '',\n      depTime: '',\n      arrTime: '',\n      terminal: '',\n      isLoading: true\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5001/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n      let array = [];\n\n      for (let i = 0; i < response.data.length; i++) {\n        let entry = {}; //key value pairs\n\n        entry.flight_from = response.data[i].flight_from;\n        entry.flight_to = response.data[i].flight_to;\n        entry.flightNum = response.data[i].flightNum;\n        entry.flight_date = response.data[i].flight_date;\n        entry.cabin = response.data[i].cabin;\n        entry.noSeats = response.data[i].noSeats;\n        entry.depTime = response.data[i].depTime;\n        entry.arrTime = response.data[i].arrTime;\n        entry.terminal = response.data[i].terminal;\n        array[i] = entry;\n      }\n\n      this.data = array;\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    console.log(this.data); // data is array of objects\n\n    const filteredData = this.data.filter(dataObj => dataObj.flight_from.indexOf(this.state.flight_from) !== -1 && dataObj.flight_to.indexOf(this.state.flight_to) !== -1 && dataObj.flight_date.indexOf(this.state.flight_date) !== -1 && dataObj.cabin.indexOf(this.state.cabin) !== -1 && dataObj.noSeats.indexOf(this.state.noSeats) !== -1);\n    const filteredData2 = this.data.filter(dataObj => dataObj.flight_to.indexOf(this.state.flight_from) !== -1 && dataObj.flight_from.indexOf(this.state.flight_to) !== -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar2, {\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        handleSearchEvents: this.handleSearchEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Flights \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountryTable, {\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flightNum: this.state.flightNum,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        depTime: this.state.depTime,\n        arrTime: this.state.arrTime,\n        terminal: this.state.terminal,\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), \" \", \"className=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"nav-link\",\n            to: \"/usersearch\",\n            children: \"User Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CountryTable, {\n        flight_from: this.state.flight_from,\n        flight_to: this.state.flight_to,\n        flightNum: this.state.flightNum,\n        flight_date: this.state.flight_date,\n        cabin: this.state.cabin,\n        noSeats: this.state.noSeats,\n        depTime: this.state.depTime,\n        arrTime: this.state.arrTime,\n        terminal: this.state.terminal,\n        data: filteredData2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/seiframy/Downloads/acl_project-main/mern/client/src/components/usersearch.js"],"names":["React","Component","axios","CountryTable","SearchBar2","NavLink","usersearch","constructor","props","handleSearchEvents","title","name","setState","data","state","records","flight_from","flight_to","flightNum","flight_date","cabin","noSeats","depTime","arrTime","terminal","isLoading","componentDidMount","get","then","response","array","i","length","entry","catch","error","render","console","log","filteredData","filter","dataObj","indexOf","filteredData2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport CountryTable from './CountryTable';\nimport { SearchBar2 } from \"./SearchBar2\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class usersearch extends Component {\n    constructor(props) {\n        super(props);\n        this.data = []; // this data should not live in state\n        this.state = { \n        records: [],\n        flight_from: '',\n        flight_to: '',\n        flightNum:'',\n        flight_date: '',\n        cabin: '',\n        noSeats: '',\n        depTime: '',\n        arrTime: '',\n        terminal: '',\n        isLoading: true,\n        };\n      }\n\n      // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n        let array = [];\n        for (let i = 0; i < response.data.length; i++) {\n          let entry = {};\n          //key value pairs\n          entry.flight_from = response.data[i].flight_from;\n          entry.flight_to = response.data[i].flight_to;\n          entry.flightNum = response.data[i].flightNum;\n          entry.flight_date = response.data[i].flight_date;\n          entry.cabin = response.data[i].cabin;\n          entry.noSeats = response.data[i].noSeats;\n          entry.depTime = response.data[i].depTime;\n          entry.arrTime = response.data[i].arrTime;\n          entry.terminal = response.data[i].terminal;\n          array[i] = entry;\n        }\n        this.data = array;\n        this.setState({\n          isLoading: false,\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  \n  \n  \n  handleSearchEvents = (title, name) => {\n    this.setState({ [name]: title });\n}\n    \n    render() {\n    console.log(this.data); // data is array of objects\n    const filteredData = this.data.filter((dataObj)=> \n    (dataObj.flight_from.indexOf(this.state.flight_from) !== -1)&&\n    (dataObj.flight_to.indexOf(this.state.flight_to) !== -1)&&\n    (dataObj.flight_date.indexOf(this.state.flight_date) !== -1)&&\n    (dataObj.cabin.indexOf(this.state.cabin) !== -1)&&\n    (dataObj.noSeats.indexOf(this.state.noSeats) !== -1));\n\n    const filteredData2 = this.data.filter((dataObj)=> \n    (dataObj.flight_to.indexOf(this.state.flight_from) !== -1)&&\n    (dataObj.flight_from.indexOf(this.state.flight_to) !== -1));\n\n    return (\n      <div className=\"App\">\n        <SearchBar2\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          handleSearchEvents={this.handleSearchEvents} />\n\n        <h3>Flights </h3>\n\n        <CountryTable\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flightNum={this.state.flightNum}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          depTime={this.state.depTime}\n          arrTime={this.state.arrTime}\n          terminal={this.state.terminal}\n          data={filteredData} /> {/* should pass filtered data into CountryTable*/}\n\nclassName=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/usersearch\">\n                User Search\n              </NavLink>\n            </li>\n          </ul>\n\n        <CountryTable\n          flight_from={this.state.flight_from}\n          flight_to={this.state.flight_to}\n          flightNum={this.state.flightNum}\n          flight_date={this.state.flight_date}\n          cabin={this.state.cabin}\n          noSeats={this.state.noSeats}\n          depTime={this.state.depTime}\n          arrTime={this.state.arrTime}\n          terminal={this.state.terminal}\n          data={filteredData2} /> {/* should pass filtered data into CountryTable*/}\n\n      </div>\n    );\n      \n      }\n}\n"]},"metadata":{},"sourceType":"module"}